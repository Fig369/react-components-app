// =============================================================================
// REUSABLE MODAL COMPONENT STYLES - BEM COMPLIANT
// =============================================================================

@use '../../styles/base.scss' as *;
@use 'sass:map';

// =============================================================================
// MODAL CONFIGURATION
// =============================================================================

// Modal size variants map
$modal-sizes: (
  small: (
    max-width: 400px,
    mobile-max-width: 90vw
  ),
  medium: (
    max-width: 600px,
    mobile-max-width: 95vw
  ),
  large: (
    max-width: 800px,
    mobile-max-width: 95vw,
    tablet-max-width: 90vw
  ),
  fullscreen: (
    max-width: 95vw,
    max-height: 95vh,
    width: 95vw,
    height: 95vh,
    mobile-max-width: 100vw,
    mobile-max-height: 100vh,
    mobile-width: 100vw,
    mobile-height: 100vh,
    mobile-border-radius: 0
  )
);

// =============================================================================
// MODAL BLOCK
// =============================================================================

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-index-modal);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-md);
  box-sizing: border-box;
  
  // Ensure modal appears above everything
  &:focus-within {
    z-index: calc(var(--z-index-modal) + 1);
  }
  
  // Animation for modal appearance
  animation: modal-fade-in 0.2s ease-out;
  
  @keyframes modal-fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

// =============================================================================
// MODAL ELEMENTS
// =============================================================================

// Modal overlay element
.modal__overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  cursor: pointer;
  box-sizing: border-box;
  
  [data-theme="dark"] & {
    background: rgba(0, 0, 0, 0.7);
  }
}

// Modal content container
.modal__content {
  position: relative;
  width: 100%;
  max-height: calc(100vh - 2rem);
  overflow-y: auto;
  z-index: 1;
  background: var(--color-background);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-xl);
  border: var(--border-width-1) solid var(--color-border);
  margin: auto;
  box-sizing: border-box;
  
  // Animation for content appearance
  animation: modal-slide-in 0.3s ease-out;
  
  @keyframes modal-slide-in {
    from {
      transform: scale(0.9) translateY(-20px);
      opacity: 0;
    }
    to {
      transform: scale(1) translateY(0);
      opacity: 1;
    }
  }
  
  @include mobile-only {
    max-height: calc(100vh - 1rem);
    border-radius: var(--border-radius-md);
  }
  
  @include high-contrast {
    border-width: var(--border-width-2);
    box-shadow: var(--shadow-xl), 0 0 0 1px var(--color-border);
  }
  
  // Custom scrollbar styling
  &::-webkit-scrollbar {
    width: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--color-surface-secondary);
    border-radius: var(--border-radius-full);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--color-border);
    border-radius: var(--border-radius-full);
    
    &:hover {
      background: var(--color-text-secondary);
    }
  }
  
  // Firefox scrollbar
  scrollbar-width: thin;
  scrollbar-color: var(--color-border) var(--color-surface-secondary);
  
  // Ensure content is accessible to screen readers
  &:focus-within {
    outline: none; // Remove default outline, rely on focus trapping
  }
}

// Modal close button
.modal__close {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  z-index: 2;
  @include flex-center;
  width: 32px;
  height: 32px;
  background: var(--color-surface-secondary);
  border: var(--border-width-1) solid var(--color-border);
  border-radius: var(--border-radius-full);
  color: var(--color-text-secondary);
  cursor: pointer;
  @include transition();
  
  @include hover {
    &:hover {
      background: var(--color-error-100);
      color: var(--color-error-600);
      border-color: var(--color-error-300);
      transform: scale(1.05);
    }
  }
  
  &:focus-visible {
    outline: var(--border-width-2) solid var(--color-focus);
    outline-offset: var(--focus-ring-offset);
    z-index: calc(var(--z-index-modal) + 2);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  [data-theme="dark"] & {
    @include hover {
      &:hover {
        background: var(--color-error-900);
        color: var(--color-error-400);
      }
    }
  }
  
  // Icon styling
  svg {
    font-size: var(--text-lg);
  }
}

// Modal header section
.modal__header {
  padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-md);
  border-bottom: var(--border-width-1) solid var(--color-border);
  margin-bottom: var(--spacing-lg);
  
  @include mobile-only {
    padding: var(--spacing-md) var(--spacing-md) var(--spacing-sm);
    margin-bottom: var(--spacing-md);
  }
}

// Modal title
.modal__title {
  font-size: var(--text-xl);
  font-weight: var(--font-weight-bold);
  color: var(--color-text);
  margin: 0;
  padding-right: var(--spacing-xl); // Space for close button
  line-height: var(--line-height-tight);
  
  @include mobile-only {
    font-size: var(--text-lg);
    padding-right: var(--spacing-lg);
  }
}

// Modal body content
.modal__body {
  padding: var(--spacing-lg);
  
  @include mobile-only {
    padding: var(--spacing-md);
  }
  
  // Remove top padding if there's a header
  .modal__header + & {
    padding-top: 0;
  }
}

// =============================================================================
// MODAL SIZE MODIFIERS - Using @each loop
// =============================================================================

@each $size, $props in $modal-sizes {
  .modal--#{$size} {
    .modal__content {
      @if map.has-key($props, max-width) {
        max-width: map.get($props, max-width);
      }
      
      @if map.has-key($props, max-height) {
        max-height: map.get($props, max-height);
      }
      
      @if map.has-key($props, width) {
        width: map.get($props, width);
      }
      
      @if map.has-key($props, height) {
        height: map.get($props, height);
      }
      
      @include mobile-only {
        @if map.has-key($props, mobile-max-width) {
          max-width: map.get($props, mobile-max-width);
        }
        
        @if map.has-key($props, mobile-max-height) {
          max-height: map.get($props, mobile-max-height);
        }
        
        @if map.has-key($props, mobile-width) {
          width: map.get($props, mobile-width);
        }
        
        @if map.has-key($props, mobile-height) {
          height: map.get($props, mobile-height);
        }
        
        @if map.has-key($props, mobile-border-radius) {
          border-radius: map.get($props, mobile-border-radius);
        }
      }
      
      @if map.has-key($props, tablet-max-width) {
        @include tablet-only {
          max-width: map.get($props, tablet-max-width);
        }
      }
    }
  }
}

// =============================================================================
// ACCESSIBILITY ENHANCEMENTS
// =============================================================================

// High contrast mode specific adjustments
@include high-contrast {
  .modal__content {
    background: var(--color-background);
    border-color: var(--color-text);
  }
  
  .modal__close {
    background: var(--color-background);
    border-color: var(--color-text);
    color: var(--color-text);
    
    &:hover {
      background: var(--color-text);
      color: var(--color-background);
    }
  }
  
  .modal__header {
    border-color: var(--color-text);
  }
}

// =============================================================================
// REDUCED MOTION SUPPORT
// =============================================================================

@include reduced-motion {
  .modal {
    animation: none;
  }
  
  .modal__content {
    animation: none;
  }
  
  .modal__close {
    &:hover,
    &:active {
      transform: none;
    }
  }
}

// =============================================================================
// PRINT STYLES
// =============================================================================

@media print {
  .modal {
    display: none;
  }
}

// =============================================================================
// LEGACY SUPPORT - Remove these after updating component JSX
// =============================================================================

.modalOverlay {
  @extend .modal__overlay;
}

.modalContent {
  @extend .modal__content;
}

.modalClose {
  @extend .modal__close;
}

.modalHeader {
  @extend .modal__header;
}

.modalTitle {
  @extend .modal__title;
}

.modalBody {
  @extend .modal__body;
}