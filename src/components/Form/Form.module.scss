// Form Component Styles with Accessibility Focus
// Follows WCAG 2.1 AA standards

.form {
  // CSS Custom Properties for theming
  --form-spacing: 1.5rem;
  --form-field-spacing: 1rem;
  --form-input-padding: 0.75rem 1rem;
  --form-input-border-radius: 0.375rem;
  --form-input-border-width: 2px;
  --form-input-border-color: hsl(0, 0%, 80%);
  --form-input-bg: var(--color-surface);
  --form-input-focus-color: var(--color-primary-500);
  --form-label-color: var(--color-text);
  --form-helper-color: var(--color-text-secondary);
  --form-error-color: var(--color-error-600);
  --form-required-color: var(--color-error-600);
  --form-disabled-opacity: 0.6;
  --form-transition: all 0.2s ease-in-out;
  
  width: 100%;
  max-width: 100%;
}

// Form Field Container
.formField {
  margin-bottom: var(--form-field-spacing);
  
  &:last-child {
    margin-bottom: 0;
  }
}

// Form Label
.formLabel {
  display: block;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--color-text);
  line-height: 1.5;
  text-align: left;
  
  .required {
    color: var(--form-required-color);
    margin-left: 0.25rem;
    font-weight: normal;
  }
  
  [data-theme="dark"] & {
    color: var(--color-text);
  }
}

// Screen reader only
.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Base input styles (shared by input, textarea, select)
@mixin inputBase {
  display: block;
  width: 100%;
  padding: var(--form-input-padding);
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.5;
  color: var(--color-text);
  background-color: var(--color-surface);
  border: var(--form-input-border-width) solid var(--color-border);
  border-radius: var(--form-input-border-radius);
  transition: var(--form-transition);
  
  &::placeholder {
    color: var(--color-text-secondary);
    opacity: 0.8;
  }
  
  &:focus {
    outline: none;
    border-color: var(--form-input-focus-color);
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
  }
  
  &:disabled {
    opacity: var(--form-disabled-opacity);
    cursor: not-allowed;
    background-color: var(--color-surface-secondary);
  }
  
  &.hasError {
    border-color: var(--form-error-color);
    
    &:focus {
      box-shadow: 0 0 0 3px rgba(var(--color-danger-rgb), 0.1);
    }
  }
  
  // High contrast mode
  @media (prefers-contrast: high) {
    border-width: 3px;
  }
}

// Text Input
.formInput {
  @include inputBase;
}

// Textarea
.formTextarea {
  @include inputBase;
  
  & {
    min-height: 6rem;
    resize: vertical;
  }
}

// Select
.formSelect {
  @include inputBase;
  
  & {
    cursor: pointer;
    padding-right: 2.5rem;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1.5rem;
  }
}

// Checkbox and Radio shared styles
@mixin checkableInput {
  position: relative;
  width: 1.25rem;
  height: 1.25rem;
  margin: 0;
  cursor: pointer;
  appearance: none;
  background-color: var(--color-surface);
  border: var(--form-input-border-width) solid var(--color-border);
  transition: var(--form-transition);
  
  &:checked {
    background-color: var(--form-input-focus-color);
    border-color: var(--form-input-focus-color);
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
  }
  
  &:disabled {
    opacity: var(--form-disabled-opacity);
    cursor: not-allowed;
  }
  
  &.hasError {
    border-color: var(--form-error-color);
  }
}

// Checkbox
.checkboxField {
  display: flex;
  flex-direction: column;
}

.checkboxWrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.formCheckbox {
  @include checkableInput;
  border-radius: 0.25rem;
  
  &:checked::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0.75rem;
    height: 0.5rem;
    border: 2px solid white;
    border-top: none;
    border-right: none;
    transform: translate(-50%, -60%) rotate(-45deg);
  }
}

.checkboxLabel {
  margin-bottom: 0;
  font-weight: normal;
  cursor: pointer;
  user-select: none;
}

// Radio
.radioGroup {
  border: none;
  padding: 0;
  margin: 0;
}

.radioLegend {
  display: block;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--color-text);
  text-align: left;
}

.radioOptions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.radioWrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.formRadio {
  @include checkableInput;
  border-radius: 50%;
  
  &:checked::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0.5rem;
    height: 0.5rem;
    background-color: white;
    border-radius: 50%;
  }
}

.radioLabel {
  font-weight: normal;
  cursor: pointer;
  user-select: none;
}

// File Upload
.fileUploadWrapper {
  position: relative;
  display: inline-block;
  width: 100%;
}

.fileInput {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
  
  &:focus + .fileLabel .fileButton {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
  }
}

.fileLabel {
  display: flex;
  align-items: center;
  gap: 1rem;
  cursor: pointer;
}

.fileButton {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  font-weight: 500;
  color: var(--form-input-focus-color);
  background-color: var(--color-surface);
  border: var(--form-input-border-width) solid var(--form-input-focus-color);
  border-radius: var(--form-input-border-radius);
  transition: var(--form-transition);
  
  &:hover {
    background-color: var(--form-input-focus-color);
    color: white;
  }
}

.fileName {
  color: var(--color-text-secondary);
  font-size: 0.875rem;
}

// Range Slider
.rangeWrapper {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.formRange {
  flex: 1;
  -webkit-appearance: none;
  appearance: none;
  height: 0.5rem;
  background: hsl(0, 0%, 90%);
  border-radius: 0.25rem;
  outline: none;
  
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    background: var(--form-input-focus-color);
    border-radius: 50%;
    cursor: pointer;
    transition: var(--form-transition);
  }
  
  &::-moz-range-thumb {
    width: 1.5rem;
    height: 1.5rem;
    background: var(--form-input-focus-color);
    border-radius: 50%;
    cursor: pointer;
    border: none;
    transition: var(--form-transition);
  }
  
  &:focus {
    &::-webkit-slider-thumb {
      box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
    }
    
    &::-moz-range-thumb {
      box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
    }
  }
  
  &:disabled {
    opacity: var(--form-disabled-opacity);
    cursor: not-allowed;
  }
}

.rangeValue {
  min-width: 3rem;
  text-align: center;
  font-weight: 600;
  color: var(--color-text);
}

// Switch
.switchField {
  display: inline-block;
}

.switchWrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.switchInput {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.switchLabel {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  user-select: none;
}

.switchTrack {
  position: relative;
  display: inline-block;
  width: 3rem;
  height: 1.5rem;
  background-color: hsl(0, 0%, 80%);
  border-radius: 1.5rem;
  transition: var(--form-transition);
}

.switchThumb {
  position: absolute;
  top: 0.125rem;
  left: 0.125rem;
  width: 1.25rem;
  height: 1.25rem;
  background-color: white;
  border-radius: 50%;
  transition: var(--form-transition);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.switchInput:checked + .switchLabel {
  .switchTrack {
    background-color: var(--form-input-focus-color);
  }
  
  .switchThumb {
    transform: translateX(1.5rem);
  }
}

.switchInput:focus + .switchLabel .switchTrack {
  box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
}

.switchInput:disabled + .switchLabel {
  opacity: var(--form-disabled-opacity);
  cursor: not-allowed;
}

.switchText {
  font-weight: normal;
}

// Helper text and errors
.helperText {
  margin-top: 0.25rem;
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  line-height: 1.4;
}

.errorText {
  margin-top: 0.25rem;
  font-size: 0.875rem;
  color: var(--form-error-color);
  font-weight: 500;
  line-height: 1.4;
  
  &::before {
    content: 'âš  ';
    margin-right: 0.25rem;
  }
}

.charCount {
  margin-top: 0.25rem;
  font-size: 0.75rem;
  color: var(--color-text-secondary);
  text-align: right;
}

// Fieldset
.fieldset {
  border: 2px solid var(--color-border);
  border-radius: var(--form-input-border-radius);
  padding: var(--form-spacing);
  margin-bottom: var(--form-field-spacing);
}

.legend {
  padding: 0 0.5rem;
  font-weight: 600;
  color: var(--color-text);
}

// Form Actions
.formActions {
  display: flex;
  gap: 1rem;
  margin-top: var(--form-spacing);
  padding-top: var(--form-spacing);
  border-top: 1px solid var(--color-border);
  
  &[data-align="left"] {
    justify-content: flex-start;
  }
  
  &[data-align="center"] {
    justify-content: center;
  }
  
  &[data-align="right"] {
    justify-content: flex-end;
  }
  
  &[data-align="between"] {
    justify-content: space-between;
  }
}

// Responsive
@media (max-width: 768px) {
  .radioOptions {
    gap: 0.75rem;
  }
  
  .formActions {
    flex-direction: column;
    
    > * {
      width: 100%;
    }
  }
}

// Theme support with CSS custom properties
[data-theme="dark"] {
  .formInput,
  .formTextarea,
  .formSelect {
    color-scheme: dark;
    background-color: var(--color-surface);
    border-color: var(--color-border);
    color: var(--color-text);
  }
  
  .formLabel {
    color: var(--color-text);
  }
  
  .helperText {
    color: var(--color-text-secondary);
  }
}