// =============================================================================
// CHART COMPONENT STYLES - BEM COMPLIANT
// =============================================================================

@use '../../styles/themes/variables' as *;
@use '../../styles/base.scss' as *;
@use '../../styles/mixins.scss' as *;
@use 'sass:map';

// =============================================================================
// CONFIGURATION MAPS
// =============================================================================

// Chart variants map
$chart-variants: (
  default: (
    background: var(--color-background),
    border: var(--color-border)
  ),
  primary: (
    background: var(--color-primary-background),
    border: var(--color-primary-border)
  ),
  elevated: (
    background: var(--color-background),
    border: var(--color-border),
    shadow: var(--shadow-md)
  ),
  card: (
    background: var(--color-card-background),
    border: var(--color-card-border),
    shadow: var(--shadow-sm),
    border-radius: var(--radius-lg)
  )
);

// Chart sizes map
$chart-sizes: (
  small: (
    height: 200px,
    min-height: 200px
  ),
  medium: (
    height: 400px,
    min-height: 300px
  ),
  large: (
    height: 600px,
    min-height: 400px
  ),
  auto: (
    height: auto,
    min-height: 200px
  )
);

// Chart types requiring centered layout
$centered-chart-types: (pie, doughnut, polarArea, radar);

// =============================================================================
// CHART BLOCK
// =============================================================================

.chart {
  position: relative;
  width: 100%;
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  padding: var(--spacing-md);
  transition: all var(--transition-duration) var(--transition-timing);
}

// Chart elements
.chart__title {
  margin: 0 0 var(--spacing-sm) 0;
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text);
  text-align: center;
  line-height: var(--line-height-tight);
}

.chart__description {
  margin: 0 0 var(--spacing-md) 0;
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  text-align: center;
  line-height: var(--line-height-normal);
}

.chart__container {
  position: relative;
  width: 100%;
  height: 400px;
  min-height: 300px;
  
  canvas {
    max-width: 100%;
    height: auto;
    border-radius: var(--radius-sm);
  }
}

// =============================================================================
// CHART VARIANT MODIFIERS - Using @each loop
// =============================================================================

@each $variant, $properties in $chart-variants {
  .chart--#{$variant} {
    @each $property, $value in $properties {
      #{$property}: #{$value};
    }
  }
}

// =============================================================================
// CHART SIZE MODIFIERS - Using @each loop
// =============================================================================

@each $size, $properties in $chart-sizes {
  .chart--#{$size} {
    .chart__container {
      @each $property, $value in $properties {
        #{$property}: #{$value};
      }
    }
  }
}

// =============================================================================
// CHART TYPE MODIFIERS - Using @each loop
// =============================================================================

@each $type in $centered-chart-types {
  .chart--#{$type} {
    .chart__container {
      display: flex;
      justify-content: center;
      align-items: center;
      
      @if $type == radar {
        padding: var(--spacing-lg);
      }
    }
  }
}

// =============================================================================
// CHART STATE ELEMENTS
// =============================================================================

// Loading state
.chart__loading {
  @include flex-center;
  @include flex-column;
  gap: var(--spacing-md);
  height: 100%;
  min-height: 200px;
  color: var(--color-text-secondary);
}

.chart__loading-spinner {
  @include flex-center;
  width: 40px;
  height: 40px;
}

.chart__spinner {
  width: 100%;
  height: 100%;
  border: 3px solid var(--color-border);
  border-radius: 50%;
  border-top-color: var(--color-primary);
  animation: chart-spin 1s ease-in-out infinite;
}

.chart__loading-text {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
}

// Error state
.chart__error {
  @include flex-center;
  @include flex-column;
  gap: var(--spacing-md);
  height: 100%;
  min-height: 200px;
  color: var(--color-danger);
  text-align: center;
  padding: var(--spacing-lg);
}

.chart__error-icon {
  font-size: var(--font-size-2xl);
}

.chart__error-message {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
}

// No data state
.chart__no-data {
  @include flex-center;
  @include flex-column;
  gap: var(--spacing-md);
  height: 100%;
  min-height: 200px;
  color: var(--color-text-tertiary);
  text-align: center;
  padding: var(--spacing-lg);
}

.chart__no-data-icon {
  font-size: var(--font-size-2xl);
}

.chart__no-data-message {
  font-size: var(--font-size-sm);
}

// =============================================================================
// ACCESSIBILITY ELEMENTS
// =============================================================================

.chart__sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// =============================================================================
// ANIMATIONS
// =============================================================================

@keyframes chart-spin {
  to {
    transform: rotate(360deg);
  }
}

// =============================================================================
// RESPONSIVE DESIGN
// =============================================================================

@media (max-width: 768px) {
  .chart {
    padding: var(--spacing-sm);
  }
  
  .chart__title {
    font-size: var(--font-size-base);
  }
  
  .chart__container {
    min-height: 250px;
  }
}

@media (max-width: 480px) {
  .chart__container {
    min-height: 200px;
  }
  
  .chart--radar .chart__container {
    padding: var(--spacing-sm);
  }
}

// =============================================================================
// REDUCED MOTION SUPPORT
// =============================================================================

@media (prefers-reduced-motion: reduce) {
  .chart__spinner {
    animation: none;
  }
  
  .chart {
    transition: none;
  }
}

// =============================================================================
// HIGH CONTRAST SUPPORT
// =============================================================================

@media (prefers-contrast: high) {
  .chart {
    border-width: 2px;
  }
  
  .chart__loading-spinner,
  .chart__error,
  .chart__no-data {
    border-width: 2px;
  }
}

// =============================================================================
// LEGACY SUPPORT - Remove these after updating component JSX
// =============================================================================

.chartTitle {
  @extend .chart__title;
}

.chartDescription {
  @extend .chart__description;
}

.chartContainer {
  @extend .chart__container;
}

.loading {
  @extend .chart__loading;
}

.loadingSpinner {
  @extend .chart__loading-spinner;
}

.spinner {
  @extend .chart__spinner;
}

.loadingText {
  @extend .chart__loading-text;
}

.error {
  @extend .chart__error;
}

.errorContent {
  @extend .chart__error;
}

.errorIcon {
  @extend .chart__error-icon;
}

.errorMessage {
  @extend .chart__error-message;
}

.noData {
  @extend .chart__no-data;
}

.noDataContent {
  @extend .chart__no-data;
}

.noDataIcon {
  @extend .chart__no-data-icon;
}

.noDataMessage {
  @extend .chart__no-data-message;
}

.srOnly {
  @extend .chart__sr-only;
}